{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/Item.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","Item","className","src","alt","GiftGrid","imgs","loading","state","setstate","useEffect","then","useFetchGifs","img","key","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,8BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,0FAC0EC,UAC7FH,GAFmB,sBAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKAA,EAAKC,OALL,uBAKdC,EALc,EAKdA,KAEDC,EAAOD,EAAKE,KAChB,YAOE,MAAO,CACLC,GAFE,EALJA,GAQEC,MAHE,EAJJA,MAQET,IAJE,EAHJU,OACEC,iBAAmBX,QAZJ,kBAsBdM,GAtBc,4CAAH,sDCEPM,EAAO,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAC/B,OACE,sBAAKa,UAAU,yCAAf,UACE,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCFGO,EAAW,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECDZ,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCiC,KAAM,GACNC,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAYxC,OANAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACL,GACtBG,EAAS,CAACH,OAAMC,SAAS,SAE1B,CAACpB,IAEGqB,EDViBI,CAAazB,GAA9BmB,EAD+B,EAC/BA,KAAMC,EADyB,EACzBA,QAEb,OACE,qCACE,oBAAIL,UAAU,oCAAd,SAAmDf,IAElDoB,GAAW,mBAAGL,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SACGI,EAAKV,KAAI,SAACiB,GAAD,OACR,wBAAC,EAAD,2BAAUA,GAAV,IAAeC,IAAKD,EAAIhB,eEVrBkB,EAAgB,WAAO,IAAD,EACG1C,mBAAS,CAAC,kBADb,mBAC1BQ,EAD0B,KACdT,EADc,KAGjC,OACE,qCACE,+CACA,cAAC,EAAD,CAAkBA,kBAClB,uBAEA,6BACGS,EAAWe,KAAI,SAACT,GAAD,OACd,wBAAC,EAAD,CAAeA,WAAW2B,IAAK3B,a,MCVzC6B,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.df2f1e70.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((categories) => [inputValue, ...categories])\r\n      setInputValue('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type='text' value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=3XiU7tNSbRr4WWh5LQcV7RnsFa5NTLpK&q=${encodeURI(\r\n    category\r\n  )}&limit=10`\r\n  const resp = await fetch(url)\r\n  const {data} = await resp.json()\r\n\r\n  const gifs = data.map(\r\n    ({\r\n      id,\r\n      title,\r\n      images: {\r\n        downsized_medium: {url},\r\n      },\r\n    }) => {\r\n      return {\r\n        id,\r\n        title,\r\n        url,\r\n      }\r\n    }\r\n  )\r\n  return gifs\r\n}\r\n","import React from 'react'\r\n\r\nexport const Item = ({id, title, url}) => {\r\n  return (\r\n    <div className='card animate__animated animate__fadeIn'>\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\nimport {Item} from './Item'\r\n\r\nexport const GiftGrid = ({category}) => {\r\n  const {imgs, loading} = useFetchGifs(category)\r\n\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n\r\n      {loading && <p className='animate__animated animate__flash'>loading</p>}\r\n      <div className='card-grid'>\r\n        {imgs.map((img) => (\r\n          <Item {...img} key={img.id} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    imgs: [],\r\n    loading: true,\r\n  })\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setstate({imgs, loading: false})\r\n    })\r\n  }, [category])\r\n\r\n  return state\r\n}\r\n","import React, {useState} from 'react'\r\nimport {AddCategory} from './components/AddCategory'\r\nimport {GiftGrid} from './components/GiftGrid'\r\n\r\nexport const GiftExpertApp = () => {\r\n  const [categories, setCategories] = useState(['One punch man'])\r\n\r\n  return (\r\n    <>\r\n      <h2>GiftExpertApp</h2>\r\n      <AddCategory {...{setCategories}} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GiftGrid {...{category}} key={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {GiftExpertApp} from './GiftExpertApp'\nimport './index.css'\n\nReactDOM.render(<GiftExpertApp />, document.getElementById('root'))\n"],"sourceRoot":""}